#_*_ coding: utf-8 _*_
from django.db import models
from django.utils.encoding import python_2_unicode_compatible

import sys
 
reload(sys)

sys.setdefaultencoding('utf8')

SERVICE_BOOL_CHOICES = ((True, "启动"), (False, "停止"))
SERVER_BRAND = (
    (0, '阿里'),
    (1, '腾讯'),
    (2, '华为'),
    (3, '亚马逊'),
)

@python_2_unicode_compatible
class Product(models.Model):
    name = models.CharField("产品线", max_length=100)
    desc = models.TextField("产品简介")
    slug = models.CharField("别名", max_length=100, blank=True, null=True)

    def __str__(self):
        return self.name

@python_2_unicode_compatible
class Project(models.Model):
    name = models.CharField("项目名", max_length=100)
    slug = models.CharField("别名", max_length=100, blank=True, null=True)
    product_name = models.ForeignKey(Product, "所属产品线")
    pm = models.CharField("项目负责人", max_length=30)
    telephone = models.CharField("联系方式", max_length=11)
    git_url = models.URLField("代码仓库路径", max_length=200)
    desc = models.TextField("项目描述")

    def __str__(self):
        return self.name

@python_2_unicode_compatible
class Server(models.Model):
    name = models.CharField("服务器名", max_length=100)
    ipaddress = models.CharField("IP地址", max_length=30, null=False)
    mac = models.CharField("mac地址", max_length=30, blank=True, null=True)
    project_name = models.ManyToManyField(Project, "所属项目", null=False)
    brand = models.IntegerField("服务器品牌", choices=SERVER_BRAND)
    CPU = models.CharField("CPU配置", max_length=30)
    memcache = models.CharField("内存", max_length=10, blank=False, null=False)
    space = models.CharField("存储空间", max_length=10, blank=False, null=False)
    
    def __str__(self):
        return self.name

@python_2_unicode_compatible
class Service(models.Model):
    name = models.CharField("服务名", max_length=50)
    server_name = models.ForeignKey(Server, "主机名")
    ipaddress = models.CharField("主机地址", max_length=50)
    status = models.IntegerField("服务状态", choices=SERVICE_BOOL_CHOICES)    

    def __str__(self):
        return self.name















